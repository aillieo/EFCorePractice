// <auto-generated />
using System;
using EFCorePractice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCorePractice.App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EFCorePractice.Model.Alliance", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("LeaderId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("EFCorePractice.Model.Battle", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("EFCorePractice.Model.BattleHero", b =>
                {
                    b.Property<byte[]>("HeroId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("BattleId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("HeroId", "BattleId");

                    b.HasIndex("BattleId");

                    b.ToTable("BattleHero");
                });

            modelBuilder.Entity("EFCorePractice.Model.Equipment", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("HeroId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("EFCorePractice.Model.Hero", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("DateAchieved")
                        .HasColumnType("date");

                    b.Property<byte[]>("MountId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("PlayerId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Heros");
                });

            modelBuilder.Entity("EFCorePractice.Model.Mount", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte[]>("HeroId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("HeroId")
                        .IsUnique();

                    b.ToTable("Mounts");
                });

            modelBuilder.Entity("EFCorePractice.Model.Player", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AllianceId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EFCorePractice.Model.Alliance", b =>
                {
                    b.HasOne("EFCorePractice.Model.Player", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");
                });

            modelBuilder.Entity("EFCorePractice.Model.BattleHero", b =>
                {
                    b.HasOne("EFCorePractice.Model.Battle", "Battle")
                        .WithMany("BattleHero")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCorePractice.Model.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCorePractice.Model.Equipment", b =>
                {
                    b.HasOne("EFCorePractice.Model.Hero", null)
                        .WithMany("Equipment")
                        .HasForeignKey("HeroId");
                });

            modelBuilder.Entity("EFCorePractice.Model.Hero", b =>
                {
                    b.HasOne("EFCorePractice.Model.Player", null)
                        .WithMany("Members")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("EFCorePractice.Model.Mount", b =>
                {
                    b.HasOne("EFCorePractice.Model.Hero", "Hero")
                        .WithOne("Mount")
                        .HasForeignKey("EFCorePractice.Model.Mount", "HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCorePractice.Model.Player", b =>
                {
                    b.HasOne("EFCorePractice.Model.Alliance", null)
                        .WithMany("Members")
                        .HasForeignKey("AllianceId");
                });
#pragma warning restore 612, 618
        }
    }
}
